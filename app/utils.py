import requests
import json
from typing import Any

from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton

from googletrans import Translator

from config_data.config import API_KEY


def open_url(url: str) -> Any:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è URL-–∞–¥—Ä–µ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.

    :param url: c—Ç—Ä–æ–∫–∞ —Å URL-–∞–¥—Ä–µ—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—å.

    :return:
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ URL-–∞–¥—Ä–µ—Å–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
    """
    headers = {"accept": "application/json", "X-API-KEY": API_KEY}

    response = requests.get(url, headers=headers)
    file = json.loads(response.text)

    return file


def print_top(film_list: list, rvrs: bool) -> str:
    """
    –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–æ–ø-—Ñ–∏–ª—å–º–æ–≤ –¥–ª—è –≤—ã–≤–æ–¥—ã –≤ —á–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    :param film_list: –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞.
    :param rvrs: –§–ª–∞–≥ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.

    :return:
    –í–æ–∑–≤—Ä–∞—â–∞–µ —Å—Ç—Ä–æ–∫—É —Å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–Ω—ã–º —Ç–æ–ø–æ–º.
    """
    res_str = str()
    first = "üèÜ" if rvrs == True else "ü§¨"
    second = "ü•à" if rvrs == True else "ü§°"
    third = "ü•â" if rvrs == True else "üëé"
    for film in film_list:
        index = film_list.index(film)
        if index == 0:
            res_str += f"<b>{index + 1}. {film[0]}</b> - {film[1]} {first}\n"
        elif index == 1:
            res_str += f"<b>{index + 1}. {film[0]}</b> - {film[1]} {second}\n"
        elif index == 2:
            res_str += f"<b>{index + 1}. {film[0]}</b> - {film[1]} {third}\n"
        else:
            res_str += f"{index + 1}. {film[0]} - {film[1]}\n"

    return res_str


def create_top_films(url: str, rvrs: bool, kinosite: str, top: int) -> str:
    """
    –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–æ–ø-—Ñ–∏–ª—å–º–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.

    :param url: URl –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ñ–∏–ª—å–º–∞—Ö.
    :param rvrs: –§–ª–∞–≥ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    :param kinosite: –°—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–∏—Å–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞.
    :param top: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π –≤ —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–º —Ç–æ–ø–µ.

    :return:
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—É—é —Å—Ç—Ä–æ–∫—É —Ç–æ–ø–∞.
    """

    try:
        file = open_url(url)

        # with open('test3.json', 'w', encoding = 'utf8') as tst:
        #      json.dump(file, tst, ensure_ascii = False, indent = 4)

        films = file["docs"]

        top_films = sorted(
            {
                film["name"]: film["rating"][kinosite]
                for film in films
                if film["rating"][kinosite] != 0 and film["name"] != None
            }.items(),
            key=lambda film: film[1],
            reverse=rvrs,
        )

        return print_top(top_films[:top], rvrs)
    except Exception:
        return "Error"


async def send_film_info(message: Message, film: dict) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å–º–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è, –ø—Ä–µ–≤—Ä–∞—â–∞—è –µ–µ –≤ —Å—Ç—Ä–æ–∫—É, –∏ –æ—Ç—Ä–ø–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param film: –°–ª–æ–≤–∞—Ä—å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å–º–µ.

    :return:
    None
    """
    info = list()
    info.append(film["poster"]["url"])
    en_type = film["type"]
    translator = Translator()
    ru_type = translator.translate(en_type, src="en", dest="ru").text
    info.append(f"üé• <b>{ru_type.title()}</b>: {film['name']} ({film['year']})")
    info.append(f"      <i>{film['countries'][0]['name']}</i>\n")
    info.append(f"üî∂ <i>{film['description']}</i>\n")  # <b>–°—é–∂–µ—Ç</b>
    info.append(
        f"<b>–ñ–∞–Ω—Ä</b>: {', '.join([item for items in [i.values() for i in film['genres']] for item in items])}.\n"
    )
    info.append(
        f'<b>–ì–ª–∞–≤–Ω—ã–µ —Ä–æ–ª–∏</b>: {", ".join([person["name"] for person in film["persons"][:3] if person is not None])}.\n'
    )
    info.append(
        f"üìä <b>Kinopoisk</b>: {film['rating']['kp']} | <b>IMDB</b>: {film['rating']['imdb']}"
    )

    try:
        markup = None
        if "videos" in film:
            trailer = InlineKeyboardButton(
                text="—Ç—Ä–µ–π–ª–µ—Ä", url=film["videos"]["trailers"][0]["url"]
            )  # <a href="—Å—Å—ã–ª–∫–∞">—Ç–µ–∫—Å—Ç</a>
            row = [trailer]
            rows = [row]
            markup = InlineKeyboardMarkup(inline_keyboard=rows)

        query_result = "\n".join(info[1:])
        url_poster = info[0]
        await message.bot.send_photo(
            chat_id=message.chat.id,
            photo=url_poster,
            caption=query_result,
            reply_markup=markup,
            parse_mode="HTML",
        )
    except Exception:
        await message.answer(
            "–£–ü–°... –ö–∞–∂–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫...\n"
            "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å(((..."
        )


def cancel_massege() -> str:
    """
    –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–∞—Ö –±–æ—Ç–∞.

    :return:
    –°—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–∞—Ö –±–æ—Ç–∞.
    """
    return (
        "/notice - –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∫–∞—Ä—Ç–∏–Ω –ª—é–±–∏–º–æ–≥–æ –∂–∞–Ω—Ä–∞.\n"
        "\n–í—ã–±–∏—Ä–∞—Ç–µ—Ç–µ –∂–∞–Ω—Ä –∫–∏–Ω–æ–∫–∞—Ä—Ç–∏–Ω, –≤—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –±–æ—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å 1 –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤ –≤—ã–±—Ä–∞–Ω–æ–º –∂–∞–Ω—Ä–µ.\n"
        "\n/topfilms - –∑–∞–ø—Ä–æ—Å —Ç–æ–ø –∫–∞—Ä—Ç–∏–Ω –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∂–∞–Ω—Ä–µ.\n"
        "\n–ë–æ—Ç —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –ª—É—á—à–∏—Ö –∏–ª–∏ —Ö—É–¥—à–∏—Ö –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É –∫–∞—Ä—Ç–∏–Ω –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö.\n"
        "\n/film - –∑–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ä—Ç–∏–Ω–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é.\n"
        "\n–ë–æ—Ç –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—Ç–∏–Ω–µ, –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –Ω–∞–ø–∏—à–µ—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.\n"
        "\n/history - –∏—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –±–æ—Ç—É.\n"
        "\n/help - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –±–æ—Ç—É."
    )
